{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "42c64139-2304-414b-97f9-180c57255a35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your option:  2\n",
      "Enter your Account Number:  1000\n",
      "Enter the deposit amount:  88\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Wrong Account Number\n",
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your option:  1\n",
      "Enter the name:  Aditya\n",
      "Enter your phone number:  7004728125\n",
      "Enter your email address:  aditya@gmail.com\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "User name: Aditya\n",
      "Phone Number: 7004728125\n",
      "Account number: 781003753112\n",
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your option:  2\n",
      "Enter your Account Number:  781003753112\n",
      "Enter the deposit amount:  10000000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Deposited amount: 10000000\n",
      "Total Balance: 10000000.00\n",
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your option:  3\n",
      "Enter your account number:  781003753112\n",
      "Enter your withdraw amount:  800000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Withdrawn Amount: 800000\n",
      "Total Balance: 9200000.00\n",
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your option:  5\n",
      "Are you sure you want to delete your account? (Yes/No):  Yes\n",
      "Enter Account Number:  781003753112\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Account Closed Successfully\n",
      "\n",
      "        Welcome to BankSystem\n",
      "        \n",
      "        1. Create Account\n",
      "        2. Deposit\n",
      "        3. Withdraw\n",
      "        4. Check Balance\n",
      "        5. Close Account\n",
      "        6. Exit\n",
      "        \n"
     ]
    }
   ],
   "source": [
    "import pymysql\n",
    "import random\n",
    "from decimal import Decimal\n",
    "\n",
    "# Connect to the database\n",
    "def connect_db():\n",
    "    return pymysql.connect(\n",
    "        host=\"localhost\",\n",
    "        user=\"root\",\n",
    "        password=\"Adity@12345\",\n",
    "        database=\"BankSystem\"\n",
    "    )\n",
    "\n",
    "# Generate a unique 12-digit account number\n",
    "def gen_uni_acc_no(cursor):\n",
    "    while True:\n",
    "        acc_no = random.randint(100000000000, 999999999999)\n",
    "        cursor.execute(\"SELECT account_number FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "        if not cursor.fetchone():\n",
    "            return acc_no\n",
    "\n",
    "# Create a new account\n",
    "def create_account():\n",
    "    name = input('Enter the name: ')\n",
    "    phone_num = input('Enter your phone number: ')\n",
    "    email = input(\"Enter your email address: \")\n",
    "    db = connect_db()\n",
    "    cursor = db.cursor()\n",
    "    cursor.execute(\"SELECT phone_number FROM bank_accounts WHERE phone_number = %s\", (phone_num,))\n",
    "    if cursor.fetchone():\n",
    "        print(\"Account already exists\")\n",
    "    else:\n",
    "        acc_no = gen_uni_acc_no(cursor)\n",
    "        cursor.execute(\n",
    "            \"INSERT INTO bank_accounts(owner_name, account_number, balance, phone_number, email) VALUES(%s, %s, %s, %s, %s)\",\n",
    "            (name, acc_no, 0, phone_num, email)\n",
    "        )\n",
    "        db.commit()\n",
    "        print(f\"User name: {name}\\nPhone Number: {phone_num}\\nAccount number: {acc_no}\")\n",
    "    cursor.close()\n",
    "    db.close()\n",
    "\n",
    "# Deposit money\n",
    "def deposit():\n",
    "    acc_no = input(\"Enter your Account Number: \")\n",
    "    try:\n",
    "        dep = Decimal(input(\"Enter the deposit amount: \"))\n",
    "        if dep <= 0:\n",
    "            print(\"Amount must be positive\")\n",
    "            return\n",
    "    except:\n",
    "        print(\"Invalid amount\")\n",
    "        return\n",
    "\n",
    "    db = connect_db()\n",
    "    cursor = db.cursor()\n",
    "    cursor.execute(\"SELECT balance FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "    result = cursor.fetchone()\n",
    "\n",
    "    if result:\n",
    "        new_balance = result[0] + dep\n",
    "        cursor.execute(\"UPDATE bank_accounts SET balance = %s WHERE account_number = %s\", (new_balance, acc_no))\n",
    "        db.commit()\n",
    "        print(f\"Deposited amount: {dep}\\nTotal Balance: {new_balance}\")\n",
    "    else:\n",
    "        print(\"Wrong Account Number\")\n",
    "    cursor.close()\n",
    "    db.close()\n",
    "\n",
    "# Withdraw money\n",
    "def withdraw():\n",
    "    acc_no = input(\"Enter your account number: \")\n",
    "    try:\n",
    "        wd = Decimal(input(\"Enter your withdraw amount: \"))\n",
    "        if wd <= 0:\n",
    "            print(\"Amount must be positive\")\n",
    "            return\n",
    "    except:\n",
    "        print(\"Invalid amount\")\n",
    "        return\n",
    "\n",
    "    db = connect_db()\n",
    "    cursor = db.cursor()\n",
    "    cursor.execute(\"SELECT balance FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "    result = cursor.fetchone()\n",
    "\n",
    "    if result:\n",
    "        if wd > result[0]:\n",
    "            print(\"Insufficient Balance\")\n",
    "        else:\n",
    "            curbal = result[0] - wd\n",
    "            cursor.execute(\"UPDATE bank_accounts SET balance = %s WHERE account_number = %s\", (curbal, acc_no))\n",
    "            db.commit()\n",
    "            print(f\"Withdrawn Amount: {wd}\\nTotal Balance: {curbal}\")\n",
    "    else:\n",
    "        print(\"Wrong Account Number\")\n",
    "    cursor.close()\n",
    "    db.close()\n",
    "\n",
    "# Check balance\n",
    "def balance():\n",
    "    acc_no = input(\"Enter Account Number: \")\n",
    "    db = connect_db()\n",
    "    cursor = db.cursor()\n",
    "    cursor.execute(\"SELECT balance FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "    result = cursor.fetchone()\n",
    "    if result:\n",
    "        print(f\"Available Balance: {result[0]}\")\n",
    "    else:\n",
    "        print(\"Wrong Account Number\")\n",
    "    cursor.close()\n",
    "    db.close()\n",
    "\n",
    "# Close account\n",
    "def close_account():\n",
    "    choice = input(\"Are you sure you want to delete your account? (Yes/No): \")\n",
    "    if choice.strip().upper() == \"YES\":\n",
    "        acc_no = input(\"Enter Account Number: \")\n",
    "        db = connect_db()\n",
    "        cursor = db.cursor()\n",
    "        cursor.execute(\"SELECT * FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "        if cursor.fetchone():\n",
    "            cursor.execute(\"DELETE FROM bank_accounts WHERE account_number = %s\", (acc_no,))\n",
    "            db.commit()\n",
    "            print(\"Account Closed Successfully\")\n",
    "        else:\n",
    "            print(\"Account not found\")\n",
    "        cursor.close()\n",
    "        db.close()\n",
    "    else:\n",
    "        print(\"Account closure cancelled\")\n",
    "\n",
    "# Main menu\n",
    "def main():\n",
    "    while True:\n",
    "        print(\"\"\"\n",
    "        Welcome to BankSystem\n",
    "        \n",
    "        1. Create Account\n",
    "        2. Deposit\n",
    "        3. Withdraw\n",
    "        4. Check Balance\n",
    "        5. Close Account\n",
    "        6. Exit\n",
    "        \"\"\")\n",
    "        try:\n",
    "            choice = int(input(\"Enter your option: \"))\n",
    "        except ValueError:\n",
    "            print(\"Invalid choice\")\n",
    "            continue\n",
    "\n",
    "        if choice == 1:\n",
    "            create_account()\n",
    "        elif choice == 2:\n",
    "            deposit()\n",
    "        elif choice == 3:\n",
    "            withdraw()\n",
    "        elif choice == 4:\n",
    "            balance()\n",
    "        elif choice == 5:\n",
    "            close_account()\n",
    "        elif choice == 6:\n",
    "            print(\"Thank you for using BankSystem Bank\")\n",
    "            break\n",
    "        else:\n",
    "            print(\"Incorrect Option\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
